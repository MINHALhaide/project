// SPDX-License-Identifier: MIT
pragma solidity ^0.8.0;

 import '@openzeppelin/contracts/token/ERC721/ERC721.sol';
 import '@openzeppelin/contracts/access/Ownable.sol';
// import " /ERC-721.sol";

// import " /Ownable.sol";
contract MintNFT is ERC721, Ownable{
    uint public mintPrice = 0.05 ether;
    uint public totalSupply;
    uint public maxSupply;
    bool public isMintEnabled;
    mapping(address => uint) public mintedWallets;

    constructor() payable ERC721('Simple Mint','SimpleMint'){

        maxSupply = 10;

    }
    function toggleisMintEnabled() external onlyOwner{

        isMintEnabled =! isMintEnabled;

     }
     function setmaxSupply(uint _maxSupply) external onlyOwner{

         maxSupply = _maxSupply;

     }
     function mint() external payable{
         require(isMintEnabled, 'minting not enable');
        require(mintedWallets[msg.sender] <1 ,'exceeded max per wallet');
        require(msg.value == mintPrice,'wrong value');
        require(maxSupply>totalSupply,'sold out');
        
        mintedWallets[msg.sender]++;
        totalSupply++;
        uint tokenID = totalSupply;
        _safeMint(msg.sender,tokenID);
     }


}
